{"ast":null,"code":"import { SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAMS, FETCH_STREAM, DELETE_STREAM, EDIT_STREAM } from './types';\nimport streams from '../apis/streams';\nimport history from '../history';\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport const createStream = formValues => {\n  return async (dispatch, getState) => {\n    const {\n      userId\n    } = getState().auth;\n    const response = await streams.post('/streams', { ...formValues,\n      userId\n    });\n    dispatch({\n      type: CREATE_STREAM,\n      payload: response.data\n    }); //Do some programmatic navigation to root route\n\n    history.push('/');\n  };\n};\nexport const fetchStreams = () => async dispatch => {\n  const response = await streams.get('/streams');\n  dispatch({\n    type: FETCH_STREAMS,\n    payload: response.data\n  });\n};\nexport const fetchStream = id => async dispatch => {\n  const response = await streams.get(`/streams/${id}`);\n  dispatch({\n    type: FETCH_STREAM,\n    payload: response.data\n  });\n};\nexport const editStream = (id, formValues) => async dispatch => {\n  const response = await streams.put(`/streams/${id}`, formValues);\n  dispatch({\n    type: EDIT_STREAM,\n    payload: response.data\n  });\n};\nexport const deleteStream = id => async dispatch => {\n  await streams.delete(`/streams/${id}`);\n  dispatch({\n    type: DELETE_STREAM,\n    payload: id\n  });\n};","map":{"version":3,"sources":["/Users/barryrollan/Desktop/dev/streams/client/src/actions/index.js"],"names":["SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAMS","FETCH_STREAM","DELETE_STREAM","EDIT_STREAM","streams","history","signIn","userId","type","payload","signOut","createStream","formValues","dispatch","getState","auth","response","post","data","push","fetchStreams","get","fetchStream","id","editStream","put","deleteStream","delete"],"mappings":"AAAA,SACEA,OADF,EAEEC,QAFF,EAGEC,aAHF,EAIEC,aAJF,EAKEC,YALF,EAMEC,aANF,EAOEC,WAPF,QAQO,SARP;AASA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,OAAP,MAAoB,YAApB;AAEA,OAAO,MAAMC,MAAM,GAAIC,MAAD,IAAY;AAChC,SAAO;AACLC,IAAAA,IAAI,EAAEX,OADD;AAELY,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMG,OAAO,GAAG,MAAM;AAC3B,SAAO;AACLF,IAAAA,IAAI,EAAEV;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMa,YAAY,GAAIC,UAAD,IAAgB;AAC1C,SAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACnC,UAAM;AAAEP,MAAAA;AAAF,QAAaO,QAAQ,GAAGC,IAA9B;AACA,UAAMC,QAAQ,GAAG,MAAMZ,OAAO,CAACa,IAAR,CAAa,UAAb,EAAyB,EAAE,GAAGL,UAAL;AAAiBL,MAAAA;AAAjB,KAAzB,CAAvB;AAEAM,IAAAA,QAAQ,CAAC;AAAEL,MAAAA,IAAI,EAAET,aAAR;AAAuBU,MAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAzC,KAAD,CAAR,CAJmC,CAKnC;;AACAb,IAAAA,OAAO,CAACc,IAAR,CAAa,GAAb;AACD,GAPD;AAQD,CATM;AAWP,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAOP,QAAP,IAAoB;AACpD,QAAMG,QAAQ,GAAG,MAAMZ,OAAO,CAACiB,GAAR,CAAY,UAAZ,CAAvB;AAEAR,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAER,aAAR;AAAuBS,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAzC,GAAD,CAAR;AACD,CAJM;AAMP,OAAO,MAAMI,WAAW,GAAIC,EAAD,IAAQ,MAAOV,QAAP,IAAoB;AACrD,QAAMG,QAAQ,GAAG,MAAMZ,OAAO,CAACiB,GAAR,CAAa,YAAWE,EAAG,EAA3B,CAAvB;AAEAV,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEP,YAAR;AAAsBQ,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAxC,GAAD,CAAR;AACD,CAJM;AAMP,OAAO,MAAMM,UAAU,GAAG,CAACD,EAAD,EAAKX,UAAL,KAAoB,MAAOC,QAAP,IAAoB;AAChE,QAAMG,QAAQ,GAAG,MAAMZ,OAAO,CAACqB,GAAR,CAAa,YAAWF,EAAG,EAA3B,EAA8BX,UAA9B,CAAvB;AAEAC,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEL,WAAR;AAAqBM,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAvC,GAAD,CAAR;AACD,CAJM;AAMP,OAAO,MAAMQ,YAAY,GAAIH,EAAD,IAAQ,MAAOV,QAAP,IAAoB;AACtD,QAAMT,OAAO,CAACuB,MAAR,CAAgB,YAAWJ,EAAG,EAA9B,CAAN;AAEAV,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEN,aAAR;AAAuBO,IAAAA,OAAO,EAAEc;AAAhC,GAAD,CAAR;AACD,CAJM","sourcesContent":["import {\n  SIGN_IN,\n  SIGN_OUT,\n  CREATE_STREAM,\n  FETCH_STREAMS,\n  FETCH_STREAM,\n  DELETE_STREAM,\n  EDIT_STREAM,\n} from './types';\nimport streams from '../apis/streams';\nimport history from '../history';\n\nexport const signIn = (userId) => {\n  return {\n    type: SIGN_IN,\n    payload: userId,\n  };\n};\n\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT,\n  };\n};\n\nexport const createStream = (formValues) => {\n  return async (dispatch, getState) => {\n    const { userId } = getState().auth;\n    const response = await streams.post('/streams', { ...formValues, userId });\n\n    dispatch({ type: CREATE_STREAM, payload: response.data });\n    //Do some programmatic navigation to root route\n    history.push('/');\n  };\n};\n\nexport const fetchStreams = () => async (dispatch) => {\n  const response = await streams.get('/streams');\n\n  dispatch({ type: FETCH_STREAMS, payload: response.data });\n};\n\nexport const fetchStream = (id) => async (dispatch) => {\n  const response = await streams.get(`/streams/${id}`);\n\n  dispatch({ type: FETCH_STREAM, payload: response.data });\n};\n\nexport const editStream = (id, formValues) => async (dispatch) => {\n  const response = await streams.put(`/streams/${id}`, formValues);\n\n  dispatch({ type: EDIT_STREAM, payload: response.data });\n};\n\nexport const deleteStream = (id) => async (dispatch) => {\n  await streams.delete(`/streams/${id}`);\n\n  dispatch({ type: DELETE_STREAM, payload: id });\n};\n"]},"metadata":{},"sourceType":"module"}