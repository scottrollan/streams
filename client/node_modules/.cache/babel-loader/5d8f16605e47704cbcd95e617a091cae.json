{"ast":null,"code":"var _jsxFileName = \"/Users/barryrollan/Desktop/dev/streams/client/src/components/streams/StreamList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../../actions';\nimport { Link } from 'react-router-dom';\n\nclass StreamList extends React.Component {\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  renderAdminBtns(stream) {\n    if (stream.userId === this.props.currentUserId) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"right floated content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: `/streams/edit/${stream.id}`,\n        className: \"ui button primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }\n      }, \"Edit\"), /*#__PURE__*/React.createElement(Link, {\n        to: `/streams/delete/${stream.id}`,\n        className: \"ui button negative\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }\n      }, \"Delete\"));\n    }\n  }\n\n  renderList() {\n    return this.props.streams.map(stream => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"item\",\n        key: stream.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }\n      }, this.renderAdminBtns(stream), /*#__PURE__*/React.createElement(\"i\", {\n        className: \"large middle aligned icon camera\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: `/stream/${stream.id}`,\n        className: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }\n      }, stream.title), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }\n      }, stream.description)));\n    });\n  }\n\n  renderCreate() {\n    if (this.props.isSignedIn) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          textAlign: 'right'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/streams/new\",\n        className: \"ui button primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }\n      }, \"Create Stream\"));\n    }\n  }\n\n  render() {\n    console.log(this.props.streams);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, \"Streams\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ui celled list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, this.renderList()), this.renderCreate());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    streams: Object.values(state.streams),\n    //turns values inside object into array\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams\n})(StreamList);","map":{"version":3,"sources":["/Users/barryrollan/Desktop/dev/streams/client/src/components/streams/StreamList.js"],"names":["React","connect","fetchStreams","Link","StreamList","Component","componentDidMount","props","renderAdminBtns","stream","userId","currentUserId","id","renderList","streams","map","title","description","renderCreate","isSignedIn","textAlign","render","console","log","mapStateToProps","state","Object","values","auth"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../../actions';\nimport { Link } from 'react-router-dom';\n\nclass StreamList extends React.Component {\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  renderAdminBtns(stream) {\n    if (stream.userId === this.props.currentUserId) {\n      return (\n        <div className=\"right floated content\">\n          <Link to={`/streams/edit/${stream.id}`} className=\"ui button primary\">\n            Edit\n          </Link>\n          <Link\n            to={`/streams/delete/${stream.id}`}\n            className=\"ui button negative\"\n          >\n            Delete\n          </Link>\n        </div>\n      );\n    }\n  }\n\n  renderList() {\n    return this.props.streams.map((stream) => {\n      return (\n        <div className=\"item\" key={stream.id}>\n          {this.renderAdminBtns(stream)}\n          <i className=\"large middle aligned icon camera\" />\n          <div className=\"content\">\n            <Link to={`/stream/${stream.id}`} className=\"header\">\n              {stream.title}\n            </Link>\n            <div className=\"description\">{stream.description}</div>\n          </div>\n        </div>\n      );\n    });\n  }\n\n  renderCreate() {\n    if (this.props.isSignedIn) {\n      return (\n        <div style={{ textAlign: 'right' }}>\n          <Link to=\"/streams/new\" className=\"ui button primary\">\n            Create Stream\n          </Link>\n        </div>\n      );\n    }\n  }\n\n  render() {\n    console.log(this.props.streams);\n    return (\n      <div>\n        <h2>Streams</h2>\n        <div className=\"ui celled list\">{this.renderList()}</div>\n        {this.renderCreate()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    streams: Object.values(state.streams), //turns values inside object into array\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn,\n  };\n};\n\nexport default connect(mapStateToProps, { fetchStreams })(StreamList);\n"]},"metadata":{},"sourceType":"module"}