{"ast":null,"code":"import { SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAMS, FETCH_STREAM, DELETE_STREAM, EDIT_STREAM } from \"./types\";\nimport streams from '../apis/streams';\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport const createStream = formValues => {\n  return async (dispatch, getState) => {\n    const {\n      userId\n    } = getState().auth;\n    const response = await streams.post('/streams', { ...formValues,\n      userId\n    });\n    dispatch({\n      type: CREATE_STREAM,\n      payload: response.data\n    });\n  };\n};\nexport const fetchStreams = () => async dispatch => {\n  const response = await streams.get('/streams/');\n  dispatch({\n    type: FETCH_STREAMS,\n    payload: response.data\n  });\n};\nexport const fetchStream = id => async dispatch => {\n  const response = await streams.get(`/streams/${id}`);\n  dispatch({\n    type: FETCH_STREAM,\n    payload: response.data\n  });\n};\nexport const deleteStream = id => async dispatch => {\n  await streams.delete(`/streams/${id}`);\n  dispatch({\n    type: DELETE_STREAM,\n    payload: id\n  });\n};\nexport const editStream = (id, formValues) => async dispatch => {\n  const response = await streams.put(`/streams/${id}`, formValues);\n  dispatch({\n    type: EDIT_STREAM,\n    payload: response.data\n  });\n};","map":{"version":3,"sources":["/Users/barryrollan/Desktop/dev/streams/client/src/actions/index.js"],"names":["SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAMS","FETCH_STREAM","DELETE_STREAM","EDIT_STREAM","streams","signIn","userId","type","payload","signOut","createStream","formValues","dispatch","getState","auth","response","post","data","fetchStreams","get","fetchStream","id","deleteStream","delete","editStream","put"],"mappings":"AAAA,SACIA,OADJ,EAEIC,QAFJ,EAGIC,aAHJ,EAIIC,aAJJ,EAKIC,YALJ,EAMIC,aANJ,EAOIC,WAPJ,QAQO,SARP;AASA,OAAOC,OAAP,MAAoB,iBAApB;AAGA,OAAO,MAAMC,MAAM,GAAIC,MAAD,IAAY;AAC9B,SAAO;AACHC,IAAAA,IAAI,EAAEV,OADH;AAEHW,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAMG,OAAO,GAAG,MAAM;AACzB,SAAO;AACHF,IAAAA,IAAI,EAAET;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMY,YAAY,GAAIC,UAAD,IAAgB;AACxC,SAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACjC,UAAM;AAAEP,MAAAA;AAAF,QAAaO,QAAQ,GAAGC,IAA9B;AACA,UAAMC,QAAQ,GAAG,MAAMX,OAAO,CAACY,IAAR,CAAa,UAAb,EAAyB,EAAC,GAAGL,UAAJ;AAAgBL,MAAAA;AAAhB,KAAzB,CAAvB;AAEAM,IAAAA,QAAQ,CAAC;AAAEL,MAAAA,IAAI,EAAER,aAAR;AAAuBS,MAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAzC,KAAD,CAAR;AACH,GALD;AAMH,CAPM;AASP,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAMN,QAAN,IAAkB;AAChD,QAAMG,QAAQ,GAAG,MAAMX,OAAO,CAACe,GAAR,CAAY,WAAZ,CAAvB;AAEAP,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEP,aAAR;AAAuBQ,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAzC,GAAD,CAAR;AACH,CAJM;AAOP,OAAO,MAAMG,WAAW,GAAIC,EAAD,IAAQ,MAAMT,QAAN,IAAkB;AACjD,QAAMG,QAAQ,GAAG,MAAMX,OAAO,CAACe,GAAR,CAAa,YAAWE,EAAG,EAA3B,CAAvB;AAEAT,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEN,YAAR;AAAsBO,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAxC,GAAD,CAAR;AACH,CAJM;AAOP,OAAO,MAAMK,YAAY,GAAID,EAAD,IAAQ,MAAMT,QAAN,IAAkB;AAClD,QAAMR,OAAO,CAACmB,MAAR,CAAgB,YAAWF,EAAG,EAA9B,CAAN;AAEAT,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEL,aAAR;AAAuBM,IAAAA,OAAO,EAAEa;AAAhC,GAAD,CAAR;AACH,CAJM;AAOP,OAAO,MAAMG,UAAU,GAAG,CAACH,EAAD,EAAKV,UAAL,KAAoB,MAAMC,QAAN,IAAkB;AAC5D,QAAMG,QAAQ,GAAG,MAAMX,OAAO,CAACqB,GAAR,CAAa,YAAWJ,EAAG,EAA3B,EAA8BV,UAA9B,CAAvB;AAEAC,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEJ,WAAR;AAAqBK,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAvC,GAAD,CAAR;AACH,CAJM","sourcesContent":["import { \n    SIGN_IN, \n    SIGN_OUT, \n    CREATE_STREAM,\n    FETCH_STREAMS,\n    FETCH_STREAM,\n    DELETE_STREAM,\n    EDIT_STREAM\n} from \"./types\"\nimport streams from '../apis/streams'\n\n\nexport const signIn = (userId) => {\n    return {\n        type: SIGN_IN,\n        payload: userId\n    }\n}\n\nexport const signOut = () => {\n    return {\n        type: SIGN_OUT\n    }\n}\n\nexport const createStream = (formValues) => {\n    return async (dispatch, getState) => {\n        const { userId } = getState().auth\n        const response = await streams.post('/streams', {...formValues, userId})\n\n        dispatch({ type: CREATE_STREAM, payload: response.data })\n    }\n}\n\nexport const fetchStreams = () => async dispatch => {\n    const response = await streams.get('/streams/')\n\n    dispatch({ type: FETCH_STREAMS, payload: response.data })\n}\n\n\nexport const fetchStream = (id) => async dispatch => {\n    const response = await streams.get(`/streams/${id}`)\n\n    dispatch({ type: FETCH_STREAM, payload: response.data })\n}\n\n\nexport const deleteStream = (id) => async dispatch => {\n    await streams.delete(`/streams/${id}`)\n\n    dispatch({ type: DELETE_STREAM, payload: id })\n}\n\n\nexport const editStream = (id, formValues) => async dispatch => {\n    const response = await streams.put(`/streams/${id}`, formValues)\n\n    dispatch({ type: EDIT_STREAM, payload: response.data })\n}\n\n"]},"metadata":{},"sourceType":"module"}